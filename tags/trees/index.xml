<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>trees - Tag - Christian Lim</title>
        <link>http://callim105.github.io/tags/trees/</link>
        <description>trees - Tag - Christian Lim</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>christiananthonylim1@gmail.com (Christian Lim)</managingEditor>
            <webMaster>christiananthonylim1@gmail.com (Christian Lim)</webMaster><lastBuildDate>Tue, 10 Aug 2021 12:23:50 -0500</lastBuildDate><atom:link href="http://callim105.github.io/tags/trees/" rel="self" type="application/rss+xml" /><item>
    <title>Invert binary tree</title>
    <link>http://callim105.github.io/posts/invert_binary_tree/</link>
    <pubDate>Tue, 10 Aug 2021 12:23:50 -0500</pubDate>
    <author>Author</author>
    <guid>http://callim105.github.io/posts/invert_binary_tree/</guid>
    <description><![CDATA[Invert a Binary Tree Overview &amp; Problem Space Problem: Write a function that takes in a Binary Tree and inverts it. The function should swap every left node in the tree for its corresponding right node. Each BinaryTree node has an integer value, a left child node and a right child node. Children nodes can either be BinaryTree nodes themselves or None/null.
Theory I like this problem because its a classic and the solution is actually really clean.]]></description>
</item></channel>
</rss>
